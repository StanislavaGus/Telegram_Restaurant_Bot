version: '3.8'

networks:
  my_network: {}

services:
  dispatcher-app:
    build: .
    container_name: dispatcher-app
    ports:
      - "8088:8088"
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - my_network


  postgres-db:
    image: postgres:14
    container_name: postgres-db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: userok
      POSTGRES_PASSWORD: 12345
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U userok -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: my_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: userok
      RABBITMQ_DEFAULT_PASS: p@ssw0rd
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
